#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#输出日志到 stdout
error_log /dev/stdout info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
	
	
    #status 返回的http 状态码
    #request 请求内容，包括方法名，地址，和http协议
    #request_method					
    #request_time 表示请求处理时间，单位为秒，精度为毫秒。从读入客户端的第一个字节开始，直到把最后一个字符发送给客户端后进行日志写入为止。
    #remote_addr 表示客户端IP地址。
    #remote_user 客户端用户名称
    #body_bytes_sent 表示发送给客户端的字节数，不包括响应头的大小；该变量与Apache模块modlogconfig里的bytes_sent发送给客户端的总字节数相同。
    #bytes_sent 发送给客户端的总字节数。
    #http_host 用户请求是使用的http地址
    #http_referer 来源页 用于记录是从哪个页面链接访问过来的；
    #http_x_forwarded_for 
    #http_user_agent 用户终端浏览器等信息
    #ssl_protocol SSL协议版本	TLSv1
    #ssl_cipher 交换数据中的算法	RC4-SHA
    #upstream_status upstream状态	200
    #upstream_addr 后台upstream的地址，即真正提供服务的主机地址	10.10.10.100:80
	
    log_format main '{'
                        '"status": "$status", '
                        '"request": "$request", '
                        '"request_method": "$request_method", '
                        '"request_length": "$request_length", '
                        '"request_time": "$request_time", '
                        '"remote_addr": "$remote_addr", '
                        '"remote_user": "$remote_user", '
                        '"body_bytes_sent": "$body_bytes_sent", '
                        '"bytes_sent": "$bytes_sent", '
                        '"http_host": "$http_host", '
                        '"http_referer": "$http_referer", '
                        '"http_x_forwarded_for": "$http_x_forwarded_for", '
                        '"http_user_agent": "$http_user_agent", '
                        '"ssl_protocol": "$ssl_protocol", '
                        '"ssl_cipher": "$ssl_cipher", '
                        '"upstream_status": "$upstream_status", '
                        '"upstream_addr": "$upstream_addr", '
                        '"upstream_response_time": "$upstream_response_time" '
					'}';
						

    #access_log  logs/access.log  main;
    #输出日志到 stdout
    access_log /dev/stdout main;

	

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location =/test {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
            ';
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

